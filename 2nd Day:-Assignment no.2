/*Create two sets of classes where the first class object allows you to store the value of distance in meters and centimetres. And the second class object stores the distance in feet and inches. Design a program in such a way so that it can read values of both the class objects and add one object of first with the second. And the final output displayed should be in the feet and inches OR metres and centimetraddition .
Author:Shivani_Teli
*/


//the preprocessor segment including the required files during the compilatuion
#include<iostream>
//additional namespaces requiured
using namespace std;

class FeetInches;//declaring class FeetIches

class MeterCentimeter//defining class MeterCentimeter 
 
{
  //data members
  int meter;
  float centimeter;

  public:
  
  //function for getting data from user
  void getdata()
  {
    cout<<"\nEnter distance in meter:";
    cin>>meter;
    cout<<"\nEnter distance in centimeter: ";
    cin>>centimeter;
  }
  
  //function for displaying  the data to  console
  void putdata()
  {
    cout<<"\nDistance: "<<meter<<" m & "<<centimeter<<" cm\n";
  }

   //      
  int getMeter()
  {
    return meter;
  }

  float getCentimeter()
  {
    return centimeter;
  }

 //declaring the friend function
 friend MeterCentimeter add(MeterCentimeter,FeetInches);

};
 

class FeetInches////defining class FeetInches
{
  int feet;
  float inches;

  public:
  
  FeetInches()
  {
   feet = inches =0;
  }

  FeetInches(MeterCentimeter m)
  {
    float xinches;
    xinches = (m.getMeter()*100 + m.getCentimeter())*0.394;
    feet = xinches/12;
    inches = xinches - (feet*12);
  }
 
 //getting data from user 
  void getdata()
  {
    cout<<"\nEnter distance in feet:";
    cin>>feet;
    cout<<"\nEnter distance in inches:";
    cin>>inches;
  }

  //displaying the output on console5
  
  void putdata()
  {
   cout<<"\nDistance: "<<feet<<" ft & "<<inches<<" inches\n";
  }

 //friend function for MeterCentimeter class
  friend MeterCentimeter add(MeterCentimeter,FeetInches);

};

//Add funtion
MeterCentimeter add(MeterCentimeter mc,FeetInches fi)
{
  MeterCentimeter a;
     
  double cm,inc,xcm,xin;
  cm = mc.meter*100 + mc.centimeter;
  inc = fi.feet*12 + fi.inches;
     
  xcm = cm + inc*2.54;
  xin = inc + cm*0.394;
     
  a.meter = xcm/100;
  a.centimeter = xcm - (a.meter*100);
     
  return a;
     
}

//Main  Driver code 
int main()
{

  MeterCentimeter m;
  FeetInches f;
 
 //user instructions for input
 cout<<"Enter the values below->->->\n";

 //calling functions to get user data
  m.getdata();
  f.getdata();


  cout<<"\nadding the total distance is: ";
  MeterCentimeter c;
  FeetInches i;
  
  //calling add friend function
  c = add(m,f);
  i = add(m,f);
    
  //display the output   
  c.putdata();
  i.putdata();

  return 0;
}
